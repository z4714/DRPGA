{
    "AgentFunctions": [
        {
            "FunctionName": "agent_reward",
            "RewardCalculation": "def reward(self, agent, world): dist2 = np.sum(np.square(agent.state.p_pos - world.landmarks[0].state.p_pos)); return -dist2"
        },
        {
            "FunctionName": "observation",
            "ObservationCalculation": "def observation(self, agent, world): entity_pos = [entity.state.p_pos - agent.state.p_pos for entity in world.landmarks]; return np.concatenate([agent.state.p_vel] + entity_pos)"
        }
    ],
    "ObservationSpaces": {
        "Agent_Alice": "[message, private_key]",
        "Agent_Alice": "[message, private_key]",
        
    },
    "ActionSpaces": {
        "Agent": "[no_action, move_left, move_right, move_down, move_up]",
    },

    "Descriptio": "In this environment, there are 2 good agents (Alice and Bob) and 1 adversary (Eve). Alice must sent a private 1 bit message to Bob over a public channel. Alice and Bob are rewarded +2 if Bob reconstructs the message, but are rewarded -2 if Eve reconstruct the message (that adds to 0 if both teams reconstruct the bit). Eve is rewarded -2 based if it cannot reconstruct the signal, zero if it can. Alice and Bob have a private key (randomly generated at beginning of each episode) which they must learn to use to encrypt the message."
}